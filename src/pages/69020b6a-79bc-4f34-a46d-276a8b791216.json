{"id":"69020b6a-79bc-4f34-a46d-276a8b791216","url":"article/running-hydra-on-google-container-engine.html","meta":{"description":""},"isDefault":false,"design":{"config":{"ory-design-vipin":{"headerBackgroundUrl":"/assets/grass-header.jpg"}},"id":""},"title":"Running Hydra on Google Container Engine","content":{"header":{"id":"ac5e7ecd-9e70-459d-a94a-a258c0291548","cells":[{"id":"9e394c0a-0912-49e3-a392-f301a299c966","inline":null,"size":12,"content":{"plugin":{"name":"ory/editor/core/content/slate","version":"0.0.1"},"state":{"serialized":{"nodes":[{"kind":"block","type":"HEADINGS/HEADING-ONE","nodes":[{"kind":"text","text":"Articles"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Running Hydra on Google Container Engine"}]}]}}}}]},"main":{"id":"6695cdbe-1331-401b-9c42-865a4c0ca7a1","cells":[{"id":"ceb5f0c3-56e0-4074-b869-1241c92f0aff","inline":null,"size":12,"rows":[{"id":"4d8b8829-d070-4f97-802e-7e938b90ea28","cells":[{"id":"0b7a66ea-49cf-4c0d-9af4-44c8cca6807f","inline":null,"size":12,"content":{"plugin":{"name":"ory/editor/core/content/slate","version":"0.0.1"},"state":{"serialized":{"nodes":[{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Warning, this article is work in progress!"}],"data":{"align":"center"}}]}}}}]},{"id":"77a60ccf-acab-4f98-ad2b-41341e789724","cells":[{"id":"c5dc0b30-512c-48a1-899a-73d2818a4f21","inline":null,"size":12,"content":{"plugin":{"name":"ory/editor/core/content/spacer","version":"0.0.1"},"state":{"height":224}}}]},{"id":"a7895833-cdc6-49b5-8298-8100d47864e6","cells":[{"id":"7f98cf64-fee6-4554-ba8c-36af5fb33466","inline":null,"size":12,"content":{"plugin":{"name":"ory/editor/core/content/slate","version":"0.0.1"},"state":{"serialized":{"nodes":[{"kind":"block","type":"HEADINGS/HEADING-TWO","nodes":[{"kind":"text","text":"Running Hydra on Google Container Engine"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","ranges":[{"text":"In this article you will learn to deploy Hydra on the Google Container Engine (GKE). Hydra is a server that implements OAuth 2.0 and OpenID Connect 1.0. Hydra works with "},{"text":"any ","marks":[{"type":"EMPHASIZE/EM","data":{}}]},{"text":"existing authentication infrastructure, not just LDAP or SAML. The goal of this article is to show you how to deploy, configure and use Hydra."}]}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Even if you're not looking to deploy Hydra to GKE, you will learn a lot about Hydra!"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Google Cloud Platform"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"First you will need to set up a few things in the Google Cloud Platform (GCP). You can skip these steps if you're not interested in deploying to GCP."}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Requirements"}]},{"kind":"block","type":"LISTS/UNORDERED-LIST","nodes":[{"kind":"block","type":"LISTS/LIST-ITEM","nodes":[{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Set up the Google Cloud SDK on your local machine. Here's a "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"quickstart"}],"data":{"href":"https://cloud.google.com/container-engine/docs/quickstart"}},{"kind":"text","text":" from Google for that."}]}]},{"kind":"block","type":"LISTS/LIST-ITEM","nodes":[{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","ranges":[{"text":"Create a Google Cloud SQL (GSQL) instance. Create a user with credentials "},{"text":"foo:bar","marks":[{"type":"CODE/CODE","data":{}}]},{"text":" and a database called "},{"text":"hydra.","marks":[{"type":"CODE/CODE","data":{}}]}]}]}]},{"kind":"block","type":"LISTS/LIST-ITEM","nodes":[{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Create a GKE Cluster. I recommend the mikro machine and 3 nodes, which is about 25$ per month."}]}]},{"kind":"block","type":"LISTS/LIST-ITEM","nodes":[{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"You will need to connect GSQL to GKE, which is described "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"here"}],"data":{"href":"https://cloud.google.com/sql/docs/mysql/connect-container-engine"}},{"kind":"text","ranges":[{"text":". You can skip everything beginning from section "},{"text":"\"Update your pod configuration file\".","marks":[{"type":"EMPHASIZE/EM","data":{}}]}]}]}]}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":""}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Deploy pods and secrets to GKE"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"kubectl apply -f secrets.yml\n\n\rkubectl apply -f deploy/consent-app.yml\r\nkubectl apply -f deploy/hydra.yml\nkubectl apply -f deploy/protected-service.yml\n\nkubectl apply -f services/protected-service.yml\nkubectl apply -f services/hydra.yml\nkubectl apply -f services/consent-app.yml\nkubectl apply -f services/load-balancer.yml"}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Verify it's working"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"export $GKE_IP=<ip>\nhydra connect --url http://$GKE_IP/hydra --id admin --secret thisisnotsecure\r\n\n$ hydra token client\nGCDo61W5eecMaFaFj9L_NoTqx05cwSe1AgLm889p1mmQ._bZftqVQl_pOjk7i_jvU9mqvkcztzSw6jQ5q4xyETo8"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Configure Hydra"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Next we need to configure Hydra. In our scenario, we have four players: hydra, consent-app, oauth2-consumer and protected-api. The latter three need access to hydra and must thus register OAuth 2.0 Clients each."}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Install Hydra"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Please install Hydra by downloading the most recent release from "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"GitHub Releases"}],"data":{"href":"https://github.com/ory/hydra/releases"}},{"kind":"text","text":". The binary won't update your PATH, you will need to do that manually."}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Create Consent App OAuth 2.0 Client"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"First we create a client for the "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"consent flow"}],"data":{"href":"https://ory.gitbooks.io/hydra/content/oauth2.html"}},{"kind":"text","text":". The consent flow is a custom http redirect flow that allows Hydra to connect to any authentication infrastructure. The consent app is a web server that acts as the middleman between your existing authentication (e.g. some PHP script, LDAP, keybase, auth0.com, ...) and Hydra. Here we will use an "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"exemplary consent app"}],"data":{"href":"https://github.com/ory/hydra-consent-app-express"}},{"kind":"text","text":". Usually you need to implement the consent app yourself."}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"hydra clients create \\\r\n    --id clients.consent-app \\\r\n    --secret notsecure-consent-app \\\r\n    -r token \\\r\n    -g client_credentials \\\r\n    -a hydra.keys"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"This client will be used to make calls to Hydra's JSON Web Key API. These keys will be used to verify / sign the consent challenge and consent response, using the JSON Web Token format. Thus, we need to allow this action in Hydra's access control by doing:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"{\r\n  \"description\": \"Allow consent-app to access JWKs for signing\",\r\n  \"subjects\": [\r\"ory.cloud-platform.idp-app\"\r],\r\n  \"effect\": \"allow\",\r\n  \"resources\": [\r\n    \"rn:hydra:keys:hydra.consent.response:private\",\r\n    \"rn:hydra:keys:hydra.consent.challenge:public\"\r\n  ],\r\n  \"actions\": [\r\"get\"\r]\r\n}"}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Create Protected API OAuth 2.0 Client"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"This client will be used to ask Hydra if a given access token is valid. Optionally, we will ask if it is ok for the token's user to perform an action by using Hydra's Access Control Policies."}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"hydra clients create \\\r\n    --id clients.protected-api \\\r\n    --secret notsecure-protected-api \\\r\n    -r token \\\r\n    -g client_credentials \\\r\n    -a hydra.warden"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"TODO POLICY"}]},{"kind":"block","type":"HEADINGS/HEADING-FOUR","nodes":[{"kind":"text","text":"Create Consumer OAuth 2.0 Client"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"This client is usually created by a third party (e.g. an outside developer) that requires access to a user's data (e.g. fotos). If you've ever created a Dropbox/Slack/Facebook/Google App, then this client is the one you created there."}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"hydra clients create \\\r\n    --id clients.oauth2-consumer \\\r\n    --secret notsecure-oauth2-consumer \\\r\n    -r code,token,id_token \\\r\n    -g authorization_code,implicit,hybrid,refresh_token \\\r\n    -a offline,force-consent,openid,mydomain.somescope \\\r\n    -c http://localhost:4445/callback\r"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Perform OAuth 2.0 Code Flow"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Next, we will perform the OAuth 2.0 Code Flow. To make this as easy as possible, we will use the Hydra CLI to acquire an Access Token:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"hydra token user --scope ... --client_id --client_secret"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"You will see a screen similar to this one"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"Use ... to sign in, and when asked for your consent"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"check all boxes. Now, you should see a screen with your Access Token, Refresh Token and ID Token!"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Access Protected Resource"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Let's use the acquired Access Token to make an authorized call! First, we will try to make the call without any authorization:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"$ curl http://$GKE_IP/protected/users"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Since we did not include credentials, we are not allowed to access the API. Let's try this again with the Access Token we acquired:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"$ curl -x \"Authorization: bearer <insert-access-token-here> http://$GKE_IP/protected/users"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Obviously, you need to replace <insert-access-token-here> with the Access Token. Ok, this worked! Let's try to access an API that is protected by Hydra's Access Control:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"$ curl -x \"Authorization: bearer <insert-access-token-here> http://$GKE_IP/protected/admins"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"As you can see, we're denied access because our user is not allowed to access this API. We can change that by creating a group \"admins\" and adding him to it."}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"$ curl -x \"Authorization: bearer <insert-access-token-here> http://$GKE_IP/protected/admins"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Using groups is not mandatory, you could also just allow the action for the user himself which has the same effect:"}]},{"kind":"block","type":"CODE/CODE","nodes":[{"kind":"text","text":"$ curl -x \"Authorization: bearer <insert-access-token-here> http://$GKE_IP/protected/admins"}]},{"kind":"block","type":"HEADINGS/HEADING-THREE","nodes":[{"kind":"text","text":"Conclusion"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"Congratulations! You deployed Hydra to GKE, wired everything together and made authorized API calls! If you need help, we offer consulting and support services around OAuth 2.0, OpenID Connect and Hydra. Drop us a line at "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"hi@ory.am"}],"data":{"href":"mailto:hi@ory.am"}},{"kind":"text","text":"!"}]},{"kind":"block","type":"PARAGRAPH/PARAGRAPH","nodes":[{"kind":"text","text":"ps: If you like this website, I created it using another Open Source Technology - the "},{"kind":"inline","type":"LINK/LINK","nodes":[{"kind":"text","text":"ORY Editor"}],"data":{"href":"https://github.com/ory/editor"}},{"kind":"text","text":". I highly recommend checking that out if you're looking for an advanced content editor."}]}]}}}}]}]}]}}}